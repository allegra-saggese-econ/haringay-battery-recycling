library(tidyr)
library(readr)
# include geocode and maps library
library(ggmap)
library(ggplot2)
# AS - cleaning of battery drop off points
# feed into RShiny dashboard of map
library(tidyr)
library(readr)
library(ggplot2)
# include packages for geocoding and location service
library(ggmap)
library(mapview)
# upload store data
drop_df <- read_csv("battery_data_clean.R")
View(drop_df)
# upload store data
drop_df <- read_csv("battery_recycling_points.csv")
# upload store data
drop_df <- read_csv("battery_recycling_points.csv")
read_csv??
?? read_csv
# upload store data
drop_df <- read_csv("battery_recycling_points.csv", delim = comma, col_names = TRUE)
# upload store data
drop_df <- read_csv("battery_recycling_points.csv", delim = "comma", col_names = TRUE)
# upload store data
drop_df <- read_csv("battery_recycling_points.csv", col_names = TRUE)
library(readr)
battery_recycling_points <- read_csv("battery_recycling_points.csv",
col_types = cols(Lat = col_number(),
Long = col_number(), `Confirmed via call` = col_factor(levels = c("Y",
"N")), `Battery drop off present?` = col_factor(levels = c("Y",
"N"))))
View(battery_recycling_points)
drop_df <- read_csv("battery_recycling_points.csv", +
col_types = cols(Lat = col_number(), +
drop_df <- read_csv("battery_recycling_points.csv",
col_types = cols(Lat = col_number(),
Long = col_number(), `Confirmed via call` = col_factor(levels = c("Y",
"N")), `Battery drop off present?` = col_factor(levels = c("Y", "N"))))
View(drop_df)
geocode
drop_df <- read_csv("battery_recycling_points_full.csv",
col_types = cols(Lat = col_number(),
Long = col_number(), `Confirmed via call` = col_factor(levels = c("Y",
"N")), `Battery drop off present?` = col_factor(levels = c("Y", "N")))) # upload data - make Y/N column a factor
View(drop_df)
library(rgdal)
library(sf)
installed.packages(sp)
installed.packages("sp")
installed.packages("sf")
installed.packages(sf_
sf_add_proj_units()
installed.packages(sf)
install.packages(c("bit", "broom", "bslib", "cachem", "classInt", "cli", "colorspace", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "e1071", "evaluate", "fansi", "fastmap", "forcats", "fs", "gargle", "geometries", "ggplot2", "haven", "highr", "htmltools", "htmlwidgets", "httr", "isoband", "jpeg", "jsonlite", "lubridate", "lwgeom", "markdown", "openssl", "png", "purrr", "raster", "Rcpp", "readr", "readxl", "rmarkdown", "s2", "sass", "sfheaders", "sp", "stringi", "terra", "tidyr", "tidyverse", "timechange", "tinytex", "units", "utf8", "vctrs", "vroom", "wk", "xfun", "XML", "yaml"))
install.packages(c("bit", "broom", "bslib", "cachem", "classInt", "cli", "colorspace", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "e1071", "evaluate", "fansi", "fastmap", "forcats", "fs", "gargle", "geometries", "ggplot2", "haven", "highr", "htmltools", "htmlwidgets", "httr", "isoband", "jpeg", "jsonlite", "lubridate", "lwgeom", "markdown", "openssl", "png", "purrr", "raster", "Rcpp", "readr", "readxl", "rmarkdown", "s2", "sass", "sfheaders", "sp", "stringi", "terra", "tidyr", "tidyverse", "timechange", "tinytex", "units", "utf8", "vctrs", "vroom", "wk", "xfun", "XML", "yaml"))
install.packages(c("bit", "broom", "bslib", "cachem", "classInt", "cli", "colorspace", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "e1071", "evaluate", "fansi", "fastmap", "forcats", "fs", "gargle", "geometries", "ggplot2", "haven", "highr", "htmltools", "htmlwidgets", "httr", "isoband", "jpeg", "jsonlite", "lubridate", "lwgeom", "markdown", "openssl", "png", "purrr", "raster", "Rcpp", "readr", "readxl", "rmarkdown", "s2", "sass", "sfheaders", "sp", "stringi", "terra", "tidyr", "tidyverse", "timechange", "tinytex", "units", "utf8", "vctrs", "vroom", "wk", "xfun", "XML", "yaml"))
install.packages(c("bit", "broom", "bslib", "cachem", "classInt", "cli", "colorspace", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "e1071", "evaluate", "fansi", "fastmap", "forcats", "fs", "gargle", "geometries", "ggplot2", "haven", "highr", "htmltools", "htmlwidgets", "httr", "isoband", "jpeg", "jsonlite", "lubridate", "lwgeom", "markdown", "openssl", "png", "purrr", "raster", "Rcpp", "readr", "readxl", "rmarkdown", "s2", "sass", "sfheaders", "sp", "stringi", "terra", "tidyr", "tidyverse", "timechange", "tinytex", "units", "utf8", "vctrs", "vroom", "wk", "xfun", "XML", "yaml"))
install.packages(c("bit", "broom", "bslib", "cachem", "classInt", "cli", "colorspace", "curl", "data.table", "dbplyr", "digest", "dplyr", "dtplyr", "e1071", "evaluate", "fansi", "fastmap", "forcats", "fs", "gargle", "geometries", "ggplot2", "haven", "highr", "htmltools", "htmlwidgets", "httr", "isoband", "jpeg", "jsonlite", "lubridate", "lwgeom", "markdown", "openssl", "png", "purrr", "raster", "Rcpp", "readr", "readxl", "rmarkdown", "s2", "sass", "sfheaders", "sp", "stringi", "terra", "tidyr", "tidyverse", "timechange", "tinytex", "units", "utf8", "vctrs", "vroom", "wk", "xfun", "XML", "yaml"))
